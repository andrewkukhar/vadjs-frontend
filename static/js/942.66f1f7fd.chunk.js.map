{"version":3,"file":"static/js/942.66f1f7fd.chunk.js","mappings":"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","sources":["components/Signup.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport { Box } from '@mui/system';\nimport Container from '@mui/material/Container';\nimport Select from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem';\nimport InputLabel from '@mui/material/InputLabel';\nimport { useSnackbar } from 'notistack';\nimport { CircularProgress } from '@mui/material';\n\nfunction Signup() {\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: '',\n    role: ''\n  });\n  const { username, email, password, role } = formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      const response = await fetch('https://vandjs-backend-api-b8d0ced4040e.herokuapp.com/users/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      const data = await response.json();\n      enqueueSnackbar(data.msg, { variant: response.ok ? 'success' : 'error' });\n      if (response.ok) {\n        navigate('/login');\n      }\n    \n    } catch (error) {\n      enqueueSnackbar('Error: ' + error.message, { variant: 'error' });\n    } finally {\n      setLoading(false);\n    }\n  };\n      \n  return (\n    <Container maxWidth=\"xs\" style={{ height: '100vh', overflow: 'hidden' }}> \n      <Box sx={{ mt: 8, mb: 2 }}>\n        <Typography variant=\"h4\">Sign Up</Typography>\n      </Box>\n      <Box component=\"form\" onSubmit={e => onSubmit(e)}>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <TextField\n              required\n              fullWidth\n              id=\"username\"\n              label=\"Username\"\n              name=\"username\"\n              autoComplete=\"text\"\n              value={username}\n              onChange={e => onChange(e)}\n              inputProps={{ minLength: 3 }}\n              error={username && username.length < 3}\n              helperText={username && username.length < 3 && \"Username is required and should be at least 3 characters\"}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <InputLabel id=\"role-label\">Role</InputLabel>\n            <Select\n                required\n                fullWidth\n                labelId=\"role-label\"\n                id=\"role\"\n                name=\"role\"\n                value={role}\n                onChange={e => onChange(e)}\n                label=\"Role\"\n            >\n                <MenuItem value={'DJ'}>DJ</MenuItem>\n                <MenuItem value={'Promoter'}>Promoter</MenuItem>\n                <MenuItem value={'Listener'}>Listener</MenuItem>\n            </Select>\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              required\n              fullWidth\n              id=\"email\"\n              type=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              value={email}\n              onChange={e => onChange(e)}\n              error={!email}\n              helperText={!email && \"Valid email is required\"}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              value={password}\n              onChange={e => onChange(e)}\n              inputProps={{ minLength: 6 }}\n              error={password && password.length < 6}\n              helperText={password && password.length < 6 && \"Password should be at least 6 characters\"}\n            />\n          </Grid>\n        </Grid>\n        <Box sx={{ mt: 2 }}>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={loading}\n          >\n            {loading ? <CircularProgress size={24} color=\"inherit\" /> : 'Sign Up'}\n          </Button>\n        </Box>\n      </Box>\n    </Container>\n  );\n}\n\nexport default Signup;\n"],"names":["navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","loading","setLoading","enqueueSnackbar","useSnackbar","_useState3","username","email","password","role","_useState4","formData","setFormData","onChange","e","_objectSpread","_defineProperty","target","name","value","onSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","data","wrap","_context","prev","next","preventDefault","fetch","method","headers","body","JSON","stringify","sent","json","msg","variant","ok","t0","message","finish","stop","_x","apply","arguments","_jsxs","Container","maxWidth","style","height","overflow","children","_jsx","Box","sx","mt","mb","Typography","component","Grid","container","spacing","item","xs","TextField","required","fullWidth","id","label","autoComplete","inputProps","minLength","error","length","helperText","InputLabel","Select","labelId","MenuItem","type","Button","color","disabled","CircularProgress","size"],"sourceRoot":""}